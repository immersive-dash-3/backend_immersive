openapi: "3.0.2"
info:
  title: API immersive-dash
  description: The documentation of endpoints for immersive dashboard
  version: "1.0"
servers:
  - url: https://api.server.test/v1
paths:
  # users
  /test:
    get:
      responses:
        "200":
          description: OK
  # mentee

  # log
  /logs:
    post:
      tags:
        - Logs
      description: Menambah data logs mentee
      summary: insert class
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                status_id: 2
                logs: "sebenarnya sudah cukup baik, mungkin perlu ada beberapa peningkatan lagi"
      responses:
        "201":
          description: Insert berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "insert berhasil"
                  data:
                    id: 3
                    user_id: 2
                    status_id: 2
                    logs: "sebenarnya sudah cukup baik, mungkin perlu ada beberapa peningkatan lagi"
        "400":
          description: insert gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "insert class failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
  /mentee/{mentee_id}/logs:
    get:
      tags:
        - Logs
      description: Membaca semua data logs mentee
      summary: get class
      security:
        - JWTAuth: []
      parameters:
        - name: mentee_id
          description: "id mentee"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: get all success.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "get success"
                  data:
                    mentee:
                      first_name: "sandi"
                      last_name: "irawan"
                      email: "sandi123@gmail.com"
                      phone_number: "08792738193"
                      telegram: "@irawansandi"
                      discord: "sandiyaw"
                      major: "mahasiswa"
                      class:
                        name: "BE 17"
                      data_log:
                        - id: 1
                          user:
                            id: 2
                            name: "ridwan"
                          status:
                            id: 3
                            name: "interview"
                          created_at: "2023-06-25 15:58:07.703"
                          log: "saya melihat perkembangan yang sangat pesat di unit ini"
                        - id: 2
                          user:
                            id: 4
                            name: "sari"
                          status:
                            id: 3
                            name: "join class"
                          created_at: "2023-06-25 15:58:07.703"
                          log: "mentee sedikit kesulitan sepertinya perlu ada perubahan materi"
                        - id: 4
                          user:
                            id: 2
                            name: "ridwan"
                          status:
                            id: 3
                            name: "interview"
                          created_at: "2023-06-25 15:58:07.703"
                          log: "saya melihat perkembangan yang sangat pesat di unit ini"

        "400":
          description: get all logs failed.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "get class failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
  /logs/{logs_id}:
    put:
      tags:
        - Logs
      description: Mengedit data logs
      summary: update logs
      security:
        - JWTAuth: []
      parameters:
        - name: logs_id
          description: "id logs"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                status_id: 2
                logs: "sebenarnya sudah cukup baik, mungkin perlu ada beberapa peningkatan lagi"
      responses:
        "200":
          description: Edit berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "edit berhasil"
                  data:
                    id: 1
                    status_id: 2
                    logs: "sebenarnya sudah cukup baik, mungkin perlu ada beberapa peningkatan lagi"
        "400":
          description: edit gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "update logs failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
    delete:
      tags:
        - Logs
      description: Menghapus data logs
      summary: delete logs
      security:
        - JWTAuth: []
      parameters:
        - name: logs_id
          description: "id logs"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "delete berhasil"
        "400":
          description: edit gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "delete logs failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
  #class

  /classes:
    post:
      tags:
        - Class
      description: Menambah data class
      summary: add class
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                name: "FE 11"
      responses:
        "201":
          description: Insert berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "insert berhasil"
                  data:
                    id: 1
                    name: "FE 11"
        "400":
          description: insert gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "insert class failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
    get:
      tags:
        - Class
      summary: get all class
      description: Melihat seluruh data class
      security:
        - JWTAuth: []
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "success get all class"
                  data:
                    - id: 1
                      name: "FE 11"
                    - id: 2
                      name: "BE 13"
                    - id: 3
                      name: "FE 14"

        "400":
          $ref: "#/components/responses/responseFailed"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
  /classes/{class_id}:
    put:
      tags:
        - Class
      description: Mengedit data class
      summary: update class
      security:
        - JWTAuth: []
      parameters:
        - name: class_id
          description: "id class"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                name: "FE 14"
      responses:
        "200":
          description: Edit berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "edit berhasil"
                  data:
                    id: 1
                    name: "FE 14"
        "400":
          description: edit gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "update class failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
    delete:
      tags:
        - Class
      description: Menghapus data class
      summary: delete class
      security:
        - JWTAuth: []
      parameters:
        - name: class_id
          description: "id class"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Delete berhasil.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "delete berhasil"
        "400":
          description: edit gagal.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "delete class failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"
    get:
      tags:
        - Class
      description: Membaca data class by id
      summary: get class by id
      security:
        - JWTAuth: []
      parameters:
        - name: class_id
          description: "id class"
          required: true
          in: path
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: get success.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "success"
                  message: "berhasil membaca data class"
                  data:
                    id: 3
                    name: "FE 12"
        "400":
          description: get failed.
          content:
            application/json:
              schema:
                type: object
                example:
                  status: "failed"
                  message: "get class by id failed, bad request"
        "500":
          $ref: "#/components/responses/responseFailedInternal"

#==================================#
#    COMPONENT
#==================================#
components:
  #==================================#
  #    JWT
  #==================================#
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  #==================================#
  #    PARAMETERS
  #==================================#
  # parameters:
  #   dataBook:
  #     name: "dataBook"
  #     in: query

  responses:
    #==================================#
    #    RESPONSE FOR GENERAL REQUEST
    #==================================#
    responseSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 200
              status:
                type: string
                example: success
              message:
                type: string
                example: Successful Operation
    responseSuccessCreate:
      description: Successful created Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 201
              status:
                type: string
                example: success
              message:
                type: string
                example: Successful created
    responseFailed:
      description: request failed
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 400
              status:
                type: string
                example: failed
              message:
                type: string
                example: Bad Request
    responseFailedInternal:
      description: internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: number
                example: 500
              status:
                type: string
                example: failed
              message:
                type: string
                example: Internal Server Error
